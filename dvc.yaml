# -*- coding: utf-8 -*-
stages:
  #Preprocessing
  #---------------------------------------------------------

  prepare:
    cmd: python3 -m scripts.preprocessing.prepare
    params:
    - prepare
    deps:
    #- ./dataset_raw/
    - ./scripts/preprocessing/prepare.py
    outs:
    - ./dataset/
    - ./plots/preprocessing/
    frozen: true

  #visualize_matching:
  #  cmd: jupyter nbconvert --execute --to notebook --inplace ./scripts/postprocessing/visualize_matching.ipynb
  #  deps:
  #  - ./scripts/preprocessing/visualize_matching.ipynb
  #  - ./dataset/
  
  #Parameter Optimization
  #---------------------------------------------------------
  params_opt:
    cmd: sbatch -W run_params_opt.sh
    params:
    - params_opt
    deps:
    - ./dataset/
    - ./scripts/model/
    outs:
    - ./model/optuna/
    - ./postprocessing/optuna/
    - ./metrics/optuna_journal.log
  #Training
  #---------------------------------------------------------
  train_clr:
    cmd: python3 -m scripts.model.train_clr
    params:
    - data
    - losses
    - model
    - train_clr
    deps:
    - ./dataset/
    - ./scripts/model/
    outs:
    - ./model/resnet.pt
    frozen: true

  #Resnet Analysis
  #---------------------------------------------------------

  write_representation:
    cmd: python3 -m scripts.postprocessing.write_representation
    deps:
    - ./scripts/postprocessing/write_representation.py
    - ./model/
    - ./dataset/
    outs:
    - ./postprocessing/representation.npy

  #visualize_UMAP:
  #  cmd: jupyter nbconvert --execute --to notebook --inplace ./scripts/postprocessing/visualize_UMAP.ipynb
  #  deps:
  #  - ./scripts/postprocessing/visualize_UMAP.ipynb
  #  - ./postprocessing/representation.npy
  #compare_distributions:
  #  cmd: jupyter nbconvert --execute --to notebook --inplace ./scripts/postprocessing/compare_distributions.ipynb
  #  deps:
  #  - ./scripts/postprocessing/compare_distributions.ipynb
  #  - ./postprocessing/representation.npy
