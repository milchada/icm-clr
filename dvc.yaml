# -*- coding: utf-8 -*-
stages:
  #Extract labels and image paths
  #-------------------------------------------------------
  # frozen:true
    extract:
    cmd: python3 -m scripts.preprocessing.extract
    params:
      - extract 
    deps:
      - scripts/preprocessing/extract.py
    outs:
      - ./dataset_raw/
  
  #Train/validate/test split
  #--------------------------------------------------------
  # frozen: true
    prepare:
    cmd: python3 -m scripts.preprocessing.prepare
    params:
      - prepare
    deps:
      - ./scripts/preprocessing/prepare.py
    outs:
      - ./dataset/

   # visualize_matching:
   #  cmd: jupyter nbconvert --execute --to notebook --inplace ./scripts/postprocessing/visualize_matching.ipynb
   #  deps:
   #  - ./scripts/preprocessing/visualize_matching.ipynb
   #  - ./dataset/

   #[OPTIONAL]: Parameter Optimization
   #Recommended only if input data structure changes significantly
   #---------------------------------------------------------
  # params_opt: 
  #   cmd: sbatch -W run_params_opt.sh
  #     params:
  #       - params_opt
  #     deps:
  #       - ./dataset/
  #       - ./scripts/model/
  #     outs:
  #       - ./metrics/optuna_journal.log
  #:       - ./model/optuna/

  # Train CLR
  #---------------------------------------------------------
  #  frozen: true
  train_clr:
    cmd: python3 -m scripts.model.train_clr
    params:
      - data
      - losses
      - model
      - train_clr
    deps:
      - ./dataset/
      - ./scripts/model/
    outs:
      - ./model/resnet.pt

  #Analyse trained ResNet
  #---------------------------------------------------------
  #  frozen: true
  write_representation:
    cmd: python3 -m scripts.postprocessing.write_representation
    deps:
      - ./scripts/postprocessing/write_representation.py
      - ./model/resnet.pt
      - ./dataset/
    outs:
      - ./postprocessing/representation.npy

  # write_optuna_representation:
  #   cmd: python3 -m scripts.postprocessing.write_optuna_representation
  #   deps:
  #     - ./dataset/
  #     - ./model/optuna/
  #     - ./scripts/postprocessing/write_optuna_representation.py
  #   outs:
  #     - ./postprocessing/optuna/

  #visualize_UMAP:
  #  cmd: jupyter nbconvert --execute --to notebook --inplace ./scripts/postprocessing/visualize_UMAP.ipynb
  #  deps:
  #  - ./scripts/postprocessing/visualize_UMAP.ipynb
  #  - ./postprocessing/representation.npy
  
  #compare_distributions:
  #  cmd: jupyter nbconvert --execute --to notebook --inplace ./scripts/postprocessing/compare_distributions.ipynb
  #  deps:
  #  - ./scripts/postprocessing/compare_distributions.ipynb
  #  - ./postprocessing/representation.npy
